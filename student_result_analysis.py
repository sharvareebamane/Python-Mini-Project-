# -*- coding: utf-8 -*-
"""student_result_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wqzo6US-MAR8fR4wuKa6BLsINUr8112c

# Student Result Analysis

Import all the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""Loading Dataset"""

data=pd.read_csv("/content/Expanded_data_with_more_features.csv")

data

print(data.head)

data.describe()

data.info()

data.isnull().sum()

"""**Drop Unnamed Column**"""

data=data.drop('Unnamed: 0',axis=1)

data.tail()

"""# Gender Distribution

"""

plt.figure(figsize=(5,5))
ax=sns.countplot(data=data,x='Gender')
ax.bar_label(ax.containers[0])
plt.title("Gender Distribution")
plt.show()

"""From the above chart we have analysed that:
the number of females in the data is more than the number of males.
"""

parentEducate_marks=data.groupby('ParentEduc').agg({ 'MathScore':'mean','ReadingScore':'mean','WritingScore':'mean'})
print(parentEducate_marks)

sns.heatmap(parentEducate_marks,annot=True)
plt.title("Relation between students score and parents education")
plt.show()

"""From the above chart we have conducted that the education of the parents have a good impact."""

parentMarrital_marks=data.groupby('ParentMaritalStatus').agg({ 'MathScore':'mean','ReadingScore':'mean','WritingScore':'mean'})
print(parentMarrital_marks)

sns.heatmap(parentMarrital_marks,annot=True)
plt.title("Relation between students score and parents marital status")
plt.show()

"""From the above chart we have concluded that there is no/ngligible impact on the student score, due to dear parents, marital status.

# Detecting Outlier
"""

sns.boxplot(data=data,x="MathScore")
plt.show()

sns.boxplot(data=data,x="ReadingScore")
plt.show()

sns.boxplot(data=data,x="WritingScore")
plt.show()

data["EthnicGroup"].unique()

"""# Distribution of Ethnic Group

"""

groupA=data.loc[(data["EthnicGroup"]=='group A')].count()
print(groupA)

groupB=data.loc[(data["EthnicGroup"]=='group B')].count()
print(groupB)

groupC=data.loc[(data["EthnicGroup"]=='group C')].count()
print(groupC)

groupD=data.loc[(data["EthnicGroup"]=='group D')].count()
print(groupD)

groupE=data.loc[(data["EthnicGroup"]=='group E')].count()
print(groupE)

grp=[groupA["EthnicGroup"],groupB["EthnicGroup"],groupC["EthnicGroup"],groupD["EthnicGroup"],groupE["EthnicGroup"]]
plt.pie(grp,labels=["Group A","Group B","Group C","Group D","Group E"],autopct="%1.2f%%")
plt.title("Distribution of Ethnic Group ")
plt.show()

"""# Getting Numbers of Student by Ethnic Group in Bar Plot.

"""

ax = sns.countplot(data = data, x ='EthnicGroup')
ax.bar_label(ax.containers[0])

plt.figure(figsize=(12,4))
x = sns.histplot(data, bins = 100, kde = True, fill = False, line_kws = {"lw":2.5})

"""#  Visualize the distribution of numerical columns using violin plots"""

k = 1
canvas = plt.figure(figsize=(5,5))
for i in data.columns[data.dtypes == "int64"]:
    g1 = canvas.add_axes([1,k,1,1])
    sns.violinplot(x = "{}".format(i), data = data)
    k += 1.3

